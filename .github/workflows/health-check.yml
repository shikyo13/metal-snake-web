name: Production Health Check

on:
  workflow_run:
    workflows: ["Deploy to Production"]
    types:
      - completed
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours

jobs:
  health-check:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Check if site is up
      run: |
        SITE_URL="${{ secrets.PRODUCTION_URL || 'https://your-domain.com' }}"
        HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$SITE_URL")
        
        if [ $HTTP_CODE -eq 200 ]; then
          echo "‚úÖ Site is up and running (HTTP $HTTP_CODE)"
        else
          echo "‚ùå Site returned HTTP $HTTP_CODE"
          exit 1
        fi
        
    - name: Check game assets
      run: |
        SITE_URL="${{ secrets.PRODUCTION_URL || 'https://your-domain.com' }}"
        
        # Check critical files
        for file in "index.html" "js/core/game.js" "css/styles.css"; do
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$SITE_URL/$file")
          if [ $HTTP_CODE -eq 200 ]; then
            echo "‚úÖ $file is accessible"
          else
            echo "‚ùå $file returned HTTP $HTTP_CODE"
            exit 1
          fi
        done
        
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üö® Production Health Check Failed',
            body: 'The production health check has failed. Please check the deployment.\n\nWorkflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
          })